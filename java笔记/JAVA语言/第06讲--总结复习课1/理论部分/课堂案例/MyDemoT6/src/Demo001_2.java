/*
 *  求两个自然数的最大公约数
 *  思路2：
 *  从两个数字中最小的数字开始循环，每次减1（最大约数不可能大于最小的数字）
 *  每次把符合要求（即同时是两个数字的约数）的值存储在一个变量中，
 *  那么这个变量最后的值就是最大的约数
 *  第二个思路，循环的次数相对较少，效率较高
 */
public class Demo001_2 {
	public static void main(String[] args) {
		int n = 6;// 第1个自然数
		int m = 9;// 第2个自然数
		// 用于保存最大约数，此数不可能大于两个自然数中最小的一个，
		// 所以取出两个数中的最小值赋值给此变量
		int result = n > m ? m : n;
		// 从大到小进行循环
		for (int i = result; i >= 1; i--) {
			// 如果当前数能被两个自然数整除，表明这个数是约数
			if ((n % i == 0) && (m % i == 0)) {
				// 将这个数保存下来
				result = i;
				// 因为是从大到小找约数，所以找到的第一个就是最大约数了
				// 找到后立即退出
				break;
			}
		}
		// 循环结束后，result变量中的值就是最大的约数了
		System.out.println("最大的约数是：" + result);
	}
}
